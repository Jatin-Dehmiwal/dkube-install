---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: dkube-controller-worker
    ksonnet.io/component: dkube
  name: dkube-controller-worker-verTag
  namespace: dkube
spec:
  selector:
    matchLabels:
      app: dkube-controller-worker
  template:
    metadata:
      labels:
        app: dkube-controller-worker
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "dkube_mgmt_ds_schedule"
                  operator: NotIn
                  values: ["false"]
      tolerations:
        - operator: "Exists"
      containers:
      - env:
        - name: DKUBE_MOUNT_PATH
          value: /home/dkube/d3s
        - name: CLUSTER_ID
          value: clusterID
        - name: DKUBE_REGISTRY
          value: dkubeRegistryPath
        - name: DKUBE_REGISTRY_UNAME
          value: dkubeRegistryUname
        - name: DKUBE_REGISTRY_PASSWD
          value: dkubeRegistryPasswd
        - name: DKUBE_SERVICE_ACCOUNT
          value: dkube
        - name: RDMA_ENABLED
          value: "false"
        - name: NFS_SERVER
          value: nfsServer
        - name: NFS_BASE_PATH
          value: nfsBasePath
        - name: DKUBE_STORAGE_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: DKUBE_STORAGE_PROVIDER
        - name: MINIMAL
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: MINIMAL
        - name: DKUBE_APISERVER_ROLE
          value: worker
        - name: DKUBE_CLUSTER
          value: dkubeClusterType
        - name: MODEL_REGISTRY
          value: modelRegistry
        envFrom:
        - configMapRef:
            name: ceph-config
            optional: true
        image: dkubeApiServerImage
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 5000
          name: dkube-d3api
          protocol: TCP
        securityContext:
          procMount: Default
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/dkube/d3s
          name: store
        - mountPath: /var/run/docker.sock
          name: docker
        - mountPath: /var/log/dkube
          name: dkube-logs
        - mountPath: /etc/dkube/dkube_platform_cfg
          name: pc
      - image: dkubeDownloaderImage
        imagePullPolicy: IfNotPresent
        name: sidecar
        securityContext:
          procMount: Default
          runAsUser: 0
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: timeout
          value: "30"
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      restartPolicy: Always
      serviceAccount: dkube
      serviceAccountName: dkube
      volumes:
      - name: store
        nfs:
          path: nfsBasePath/dkube
          server: nfsServer
      - name: dkube-logs
        nfs:
          path: nfsBasePath/dkube/system/logs/dkube
          server: nfsServer
      - hostPath:
          path: /var/run/docker.sock
        name: docker
      - configMap:
          name: dkube-platform-cfg
        name: pc
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: dkube-ext
  name: dkube-exporter-ds-verTag
  namespace: dkube
spec:
  selector:
    matchLabels:
      app: dkube-ext
  template:
    metadata:
      labels:
        app: dkube-ext
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "dkube_mgmt_ds_schedule"
                  operator: NotIn
                  values: ["false"]
      tolerations:
        - operator: "Exists"
      containers:
      - env:
        - name: MYNODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NVIDIA_MIG_MONITOR_DEVICES
          value: all
        image: dkubeExtImage
        imagePullPolicy: IfNotPresent
        name: gpu-exporter
        ports:
        - containerPort: 9401
          name: http-metrics
          protocol: TCP
        securityContext:
          capabilities:
            add:
              - SYS_ADMIN
        volumeMounts:
        - mountPath: /usr/local/nvidia/lib64
          name: nvidia-lib
        - mountPath: /var/run/docker.sock
          name: docker
      - image: fluentdImage
        imagePullPolicy: IfNotPresent
        name: log-processor
        securityContext:
          procMount: Default
          runAsUser: 0
        volumeMounts:
        - mountPath: LOG_PATH
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /fluentd/etc/
          name: dkube-log-collector
          readOnly: true
        - mountPath: /var/log
          name: varlog
      serviceAccountName: dkube
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: timeout
          value: "30"
      imagePullSecrets:
      - name: dkubeDockerSecret
      volumes:
      - hostPath:
          path: /usr/lib64/nvidia
        name: nvidia-lib
      - hostPath:
          path: /var/run/docker.sock
        name: docker
      - hostPath:
          path: /var/log
        name: varlog
      - configMap:
          defaultMode: 420
          name: dkube-log-collector
        name: dkube-log-collector
      - hostPath:
          path: LOG_PATH
        name: varlibdockercontainers

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dkube-auth
    ksonnet.io/component: dkube
  name: dkube-auth-server-verTag
  namespace: dkube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dkube-auth
  template:
    metadata:
      labels:
        app: dkube-auth
      name: d3auth
      namespace: dkube
    spec:
      containers:
      - command:
        - /opt/dkube/startup
        image: dkubeAuthImage
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 5556
          name: dex-s
          protocol: TCP
        securityContext:
          procMount: Default
          runAsUser: 0
      - image: dkubeAuthImage
        imagePullPolicy: IfNotPresent
        name: sidecar
        command: ["bash", "-c", "sleep 10; /opt/dkube/d3"]
        env:
        - name: DKUBE_CLUSTER
          value: dkubeClusterType
        - name: CLUSTER_ID
          value: clusterID
        ports:
        - containerPort: 3001
          name: authn
          protocol: TCP
        volumeMounts:
        - mountPath: /var/log/dkube
          name: dkube-logs
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      nodeSelector: NODE_SELECTOR
      restartPolicy: Always
      serviceAccount: dkube
      serviceAccountName: dkube
      volumes:
      - name: dkube-logs
        nfs:
          path: nfsBasePath/dkube/system/logs/dkube
          server: nfsServer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dkube-tools
    ksonnet.io/component: dkube
  name: dkube-inf-doc-server-verTag
  namespace: dkube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dkube-tools
  template:
    metadata:
      labels:
        app: dkube-tools
    spec:
      containers:
      - image: dkubeInferenceImage
        imagePullPolicy: IfNotPresent
        name: main
      - image: dkubeDocsImage
        imagePullPolicy: IfNotPresent
        name: sidecar
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      nodeSelector: NODE_SELECTOR
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dkube-operator-proxy
    ksonnet.io/component: dkube
  name: dkube-operator-api-proxy-verTag
  namespace: dkube
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dkube-operator-proxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dkube-operator-proxy
    spec:
      containers:
      - image: dfabProxyImage
        imagePullPolicy: IfNotPresent
        name: main
        env:
        - name: DATABASE
          value: databaseType
        - name: DATABASE_DSN
          value: databaseDSN
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: timeout
          value: "30"
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      nodeSelector: NODE_SELECTOR
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dkube-exporter-deploy
  name: dkube-exporter-deploy-verTag
  namespace: dkube
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dkube-exporter-deploy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dkube-exporter-deploy
    spec:
      containers:
      - name: deployments-exporter
        image: deploymentExporterImage
        ports:
          - name: metrics
            containerPort: 8000
            protocol: TCP
        volumeMounts:
          - name: storage
            mountPath: /opt/dkube-storage
        imagePullPolicy: Always
        env:
        - name: PRODUCTION
          value: 'true'
        - name: DKUBE_DB
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: DATABASE
        - name: DKUBE_DB_DSN
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: DATABASE_DSN
      - env:
        - name: DKUBE_STORAGE_PATH
          value: /opt/dkube-storage
        image: storageExporterImage
        imagePullPolicy: IfNotPresent
        name: storage-exporter
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/dkube-storage
          name: storage
      - image: quay.io/coreos/kube-state-metrics:v1.9.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: state-exporter
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 130Mi
          requests:
            cpu: 100m
            memory: 130Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /pod_nanny
        - --container=state-exporter
        - --cpu=100m
        - --extra-cpu=1m
        - --memory=130Mi
        - --extra-memory=2Mi
        - --acceptance-offset=5
        - --deployment=dkube-state-exporter
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: gcr.io/google-containers/addon-resizer-amd64:2.1
        imagePullPolicy: IfNotPresent
        name: addon-resizer
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 30Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: timeout
          value: "30"
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      nodeSelector: NODE_SELECTOR
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: dkube-state-exporter
      serviceAccountName: dkube-state-exporter
      terminationGracePeriodSeconds: 30
      volumes:
      - name: storage
        nfs:
          path: nfsBasePath/
          server: nfsServer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dkube-d3watcher
    ksonnet.io/component: dkube
  name: dkube-watcher-verTag
  namespace: dkube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dkube-d3watcher
  template:
    metadata:
      labels:
        app: dkube-d3watcher
    spec:
      containers:
      - env:
        - name: DKUBE_SERVICE_ACCOUNT
          value: dkube
        - name: CLUSTER_ID
          value: clusterID
        - name: MINIMAL
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: MINIMAL
        image: dkubeWatcherImage
        imagePullPolicy: IfNotPresent
        name: main
        securityContext:
          procMount: Default
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/dkube
          name: dkube-logs-host
      - image: dkubeInfWatcherImage
        imagePullPolicy: IfNotPresent
        name: inference
        env:
        - name: CLUSTER_ID
          value: clusterID
        - name: MINIMAL
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: MINIMAL
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: timeout
          value: "30"
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      nodeSelector: NODE_SELECTOR
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: dkube
      serviceAccountName: dkube
      volumes:
      - hostPath:
          path: /var/log/dkube
          type: DirectoryOrCreate
        name: dkube-logs-host
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: dkube-controller-master
    ksonnet.io/component: dkube
  annotations:
    IAM_ROLE_ANNOTATION
  name: dkube-controller-master-verTag
  namespace: dkube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dkube-controller-master
  serviceName: dkube-controller-master-headless
  template:
    metadata:
      annotations:
        IAM_ROLE_ANNOTATION
      labels:
        app: dkube-controller-master
    spec:
      containers:
      - image: dkubeMlFlowServerImage
        imagePullPolicy: IfNotPresent
        env:
        - name: CLUSTER_ID
          value: clusterID
        - name: MLFLOW_S3_ENDPOINT_URL
          value: http://dkube-minio-server.dkube-infra:9000
        - name: AWS_ACCESS_KEY_ID
          value: dkube
        - name: AWS_SECRET_ACCESS_KEY
          value: minioSecretKey
        name: d3mlflow
        ports:
        - containerPort: 5002
          name: dkube-d3mlflow
          protocol: TCP
        securityContext:
          procMount: Default
          runAsUser: 0
        volumeMounts:
        - mountPath: /dkube
          name: store
      - env:
        - name: DKUBE_MOUNT_PATH
          value: /home/dkube/d3s
        - name: CLUSTER_ID
          value: clusterID
        - name: DKUBE_REGISTRY
          value: dkubeRegistryPath
        - name: DKUBE_REGISTRY_UNAME
          value: dkubeRegistryUname
        - name: DKUBE_REGISTRY_PASSWD
          value: dkubeRegistryPasswd
        - name: DKUBE_SERVICE_ACCOUNT
          value: dkube
        - name: RDMA_ENABLED
          value: "false"
        - name: NFS_SERVER
          value: nfsServer
        - name: NFS_BASE_PATH
          value: nfsBasePath
        - name: DKUBE_APISERVER_ROLE
          value: master
        - name: DKUBE_STORAGE_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: DKUBE_STORAGE_PROVIDER
        - name: MINIMAL
          valueFrom:
            configMapKeyRef:
              name: dkube-installer
              key: MINIMAL
        - name: DKUBE_CLUSTER
          value: dkubeClusterType
        - name: MODEL_REGISTRY
          value: modelRegistry
        - name: DKUBE_ENABLE_S3_MOUNT
          value: "true"
        envFrom:
        - configMapRef:
            name: ceph-config
            optional: true
        image: dkubeApiServerImage
        imagePullPolicy: IfNotPresent
        name: main
        ports:
        - containerPort: 5000
          name: dkube-d3api
          protocol: TCP
        securityContext:
          procMount: Default
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/dkube/d3s
          name: store
        - mountPath: /var/run/docker.sock
          name: docker
        - mountPath: /var/log/dkube
          name: dkube-logs
        - mountPath: /etc/dkube/dkube_platform_cfg
          name: pc
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: timeout
          value: "30"
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dkubeDockerSecret
      nodeSelector: NODE_SELECTOR
      restartPolicy: Always
      serviceAccount: dkube
      serviceAccountName: dkube
      volumes:
      - name: store
        nfs:
          path: nfsBasePath/dkube
          server: nfsServer
      - name: dkube-logs
        nfs:
          path: nfsBasePath/dkube/system/logs/dkube
          server: nfsServer
      - hostPath:
          path: /var/run/docker.sock
        name: docker
      - configMap:
          name: dkube-platform-cfg
        name: pc
---
